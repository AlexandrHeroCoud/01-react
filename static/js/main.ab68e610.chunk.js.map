{"version":3,"sources":["serviceWorker.js","index.js","redux/Reducers/AuthReducer.js","redux/Reducers/ProfileReducer.js","redux/Reducers/DialogsReducer.js","components/common/Preloader/Preloader.js","redux/Reducers/AppReducer.js","api/api.js","components/common/MatrixPreloader/MatrixFunc.jsx","redux/Reducers/SidebarReducer.js","redux/redux-store.js","utils/helpers/helper-object.js","redux/Reducers/FriendsReducer.js","index.module.css"],"names":["Boolean","window","location","hostname","match","App","React","lazy","ReactDOM","render","store","fallback","Preloader","classString","c","preloaderRoot","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","stateInitDefault","id","email","login","isAuth","setUserDataAuth","type","data","getUserDataAuth","dispatch","a","authAPI","authMe","response","resultCode","logIn","password","rememberMe","stopSubmit","_error","messages","logOut","AuthReducer","state","action","profileInfo","userId","photos","small","large","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","statePost","Posts","header","content","time","newPostText","userStatus","isOwner","editMode","comments","commentContent","setEditModeSuccess","setUserProfileSuccess","profile","updateNewPostText","addPost","setUserStatus","status","getUserProfile","usersAPI","getUserProfileById","getUserStatus","profileAPI","getUserStatusById","updateUserStatus","updateUserStatusById","savePhoto","photo","setUserPhoto","alert","saveProfile","setUserProfile","setIsOwner","setIsOwnerSuccess","setEditMode","setComment","commentData","setCommentAvatarSuccess","ProfileReducer","Math","random","headPost","textPost","Date","post","comment","DialogsPage","dialogs","userName","userPreviewUrl","lastMessage","newMessage","updateNewMessageCreator","addMessageCreator","DialogsReducer","getHours","getMinutes","props","speed","initialState","initialized","initializeApp","promise","Promise","all","AppReducer","instans","axios","withCredentials","baseURL","headers","getUsers","pageNum","pageSize","get","followByUser","unFollowUser","delete","warn","put","formData","FormData","append","MatrixNative","memo","canvas","useRef","classWrapper","useEffect","current","ctx","getContext","height","parentElement","clientHeight","width","clientWidth","matrix","split","columns","drops","x","setInterval","fillStyle","fillRect","font","font_size","i","length","text","floor","fillText","className","style","ref","NavBar","NavBarLinks","linkId","link","FriendsIsOnline","SidebarReducer","stateCopy","reducers","combineReducers","FriendsReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","updateObjectInArray","items","itemId","objPropName","newObjectProp","map","users","name","uniqueUrlName","followed","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalNumUsers","respTotalUsersCount","setFetch","setToggleIsFollowing","getUsersThunkCrator","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unFollow","filter","module","exports"],"mappings":"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","file":"static/js/main.ab68e610.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux/redux-store\";\r\nimport Preloader  from\"./components/common/Preloader/Preloader\";\r\nimport c from './index.module.css'\r\nconst App =React.lazy(()=>import('./App'));\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <Suspense fallback={<Preloader classString={c.preloaderRoot}/>}>\r\n                <App />\r\n            </Suspense>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n","import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"auth/SET-USER-DATA\"\r\n\r\nlet stateInitDefault = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n/** @function AuthReducer\r\n *  @param {Object} state\r\n *  @param {Object} action\r\n    @return state\r\n */\r\nconst AuthReducer = (state = stateInitDefault, action) =>{\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\n/** @function setUserDataAuth()\r\n *  is ActionCreator\r\n */\r\nconst setUserDataAuth = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        id: id,\r\n        email: email,\r\n        login: login,\r\n        isAuth: isAuth\r\n    }\r\n})\r\n\r\n/** @function getUserDataAuth()\r\n *  Get user data of authAPI and set them in STATE\r\n */\r\nexport const getUserDataAuth = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setUserDataAuth(id, login, email, true))\r\n    }\r\n}\r\n\r\n/** @function logIn\r\n *  @param {String} email\r\n *  @param {String} password\r\n *  @param {boolean} rememberMe\r\n */\r\nexport const logIn = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logIn(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserDataAuth())\r\n    } else {\r\n        dispatch(stopSubmit(\"Login\", {_error: response.data.messages}))\r\n    }\r\n}\r\n\r\n/**\r\n * logOut\r\n * Log out user of app and set isAuth = false\r\n * */\r\nexport const logOut = ()=> async (dispatch) => {\r\n    let response = await authAPI.logOut()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataAuth(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AuthReducer","import {profileAPI, usersAPI} from \"../../api/api\";\r\n\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\nconst SET_USER_PHOTO = 'SET_USER_PHOTO';\r\nconst SET_IS_OWNER = 'SET_IS_OWNER';\r\nconst SET_COMMENT_AVATAR = 'SET_COMMENT_AVATAR';\r\nconst SET_EDIT_MODE = 'SET_EDIT_MODE';\r\n\r\nlet stateInitDefault = {\r\n        profileInfo:{\r\n            userId: null,\r\n            photos: {\r\n                small: null,\r\n                large: null\r\n                // small: \"https://beztabu.net/uploads/770x433_DIR/media_news/2018/08/5b87da423bd60879544270.jpg\",\r\n                // large: \"https://xakep.ru/wp-content/uploads/2018/01/151212/zahod-h.jpg\"\r\n            },\r\n            fullName: null,\r\n            aboutMe: null,\r\n            contacts: {\r\n                facebook: \"facebook.com\",\r\n                website: null,\r\n                vk: \"vk.com/\",\r\n                twitter: \"https://twitter.com/\",\r\n                instagram: \"https://instagram.com/\",\r\n                youtube: null,\r\n                github: \"github.com\",\r\n                mainLink: null\r\n            },\r\n            lookingForAJob: false,\r\n            lookingForAJobDescription: \"\",\r\n        },\r\n        statePost: {\r\n            Posts: [\r\n                {id: 1, header: \"Header post1\", content: \"Fuck the world!!! We are FSociety\", time: \"4:28\"},\r\n                {id: 2, header: \"Header post2\", content: \"Fuck the world!!! We are FSociety\", time: \"4:28\"},\r\n                {id: 3, header: \"Header post3\", content: \"Fuck the world!!! We are FSociety\", time: \"4:28\"},\r\n                {id: 4, header: \"Header post4\", content: \"Fuck the world!!! We are FSociety\", time: \"4:28\"},\r\n            ],\r\n            newPostText: {id: null, header: \"\", content: \"\", time: \"\"}\r\n        },\r\n        userStatus: '',\r\n        isOwner: false,\r\n        editMode: false,\r\n        comments: [\r\n            {id: null, commentContent: null,}\r\n        ]\r\n}\r\n\r\nconst ProfileReducer = (state = stateInitDefault, action) =>{\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.statePost.newPostText = {\r\n            id: Math.random(), header: action.data.headPost, content: action.data.textPost, time: new Date()}\r\n            return state\r\n        case  ADD_POST:\r\n            let post = {\r\n                id: state.statePost.newPostText.id,\r\n                header: state.statePost.newPostText.header,\r\n                content: state.statePost.newPostText.content,\r\n                time: state.statePost.newPostText.time\r\n            };\r\n\r\n            state.statePost.Posts = [...state.statePost.Posts, post]\r\n\r\n            state.statePost.newPostText = {\r\n                id: Math.random(), header: '', content: '', time: new Date()\r\n            }\r\n            return state\r\n        case SET_USER_PROFILE:{\r\n            return {...state, profileInfo: action.data}\r\n        }\r\n        case SET_USER_STATUS:{\r\n            return {...state, userStatus: action.status}\r\n        }\r\n        case SET_USER_PHOTO:{\r\n            return {...state, profileInfo: {...state.profileInfo, photos: action.photos} }\r\n        }\r\n        case SET_IS_OWNER:{\r\n            return {...state, isOwner: action.isOwner }\r\n        }\r\n        case SET_COMMENT_AVATAR:{\r\n            let comment = {\r\n                id: Math.random(),\r\n                commentContent: action.commentData.comment,\r\n            };\r\n            return {...state, comments: [...state.comments,comment]}\r\n        }\r\n        case SET_EDIT_MODE:{\r\n            return {...state, editMode: action.editMode}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setEditModeSuccess = (editMode) => ({\r\n    type:SET_EDIT_MODE,\r\n    editMode: editMode\r\n})\r\n\r\nconst setUserProfileSuccess = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    data: profile\r\n})\r\nexport const updateNewPostText = (data) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    data: data\r\n})\r\nexport const addPost = () =>({\r\n    type: ADD_POST\r\n})\r\n\r\nconst setUserStatus = (status) => ({\r\n    type: SET_USER_STATUS,\r\n    status: status\r\n})\r\nconst setUserPhotoSuccess = (photos) =>({\r\n    type:SET_USER_PHOTO,\r\n    photos:photos,\r\n})\r\n\r\nconst setIsOwnerSuccess = (isOwner) =>({\r\n    type:SET_IS_OWNER,\r\n    isOwner: isOwner\r\n})\r\nconst setCommentAvatarSuccess = (commentData) =>({\r\n    type: SET_COMMENT_AVATAR,\r\n    commentData:  commentData\r\n})\r\nexport const getUserProfile = (userId) =>{\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getUserProfileById(userId)\r\n        dispatch(setUserProfileSuccess(response.data))\r\n    }\r\n}\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getUserStatusById(userId)\r\n        dispatch(setUserStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n       const response = await profileAPI.updateUserStatusById(status)\r\n            dispatch(setUserStatus(response))\r\n    }\r\n}\r\n\r\n/**\r\n * @function savePhoto()\r\n * @param {File} photo\r\n * @return alert(error)\r\n *  **/\r\nexport const savePhoto = (photo) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.setUserPhoto(photo)\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setUserPhotoSuccess(response.data.data.photos))\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @function saveProfile()\r\n * @param {Object} profileInfo\r\n * @return set state profileInfo, else alert(error)\r\n *  **/\r\nexport const saveProfile = (profileInfo) => {\r\n    return async (dispatch) => {\r\n       const response = await profileAPI.setUserProfile(profileInfo)\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setUserProfileSuccess(profileInfo))\r\n            dispatch(setEditModeSuccess(false))\r\n        } else {\r\n            alert(response.data.messages)\r\n        }\r\n    }\r\n}\r\n/**\r\n * @function setIsOwner()\r\n * @param {Boolean} isOwner\r\n * **/\r\nexport const setIsOwner = (isOwner) =>{\r\n    return (dispatch) => {\r\n            dispatch(setIsOwnerSuccess(isOwner))\r\n    }\r\n}\r\n/**\r\n * @function setEditMode()\r\n * @param {Boolean} editMode\r\n * **/\r\nexport const setEditMode = (editMode) =>{\r\n    return (dispatch) =>{\r\n        dispatch(setEditModeSuccess(editMode))\r\n    }\r\n}\r\nexport const setComment = (commentData) =>{\r\n    return (dispatch) =>{\r\n        dispatch(setCommentAvatarSuccess(commentData))\r\n    }\r\n}\r\nexport default ProfileReducer","const NEW_MESSAGE = \"NEW-MESSAGE\";\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet stateInitDefault = {\r\n    DialogsPage: {\r\n        dialogs: [\r\n            {\r\n                userId: 12,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                lastMessage: \"Lorem lorem lorem\",\r\n                time: \"04:28\"\r\n            },\r\n            {\r\n                userId: 13,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                lastMessage: \"Lorem lorem lorem\",\r\n                time: \"04:28\"\r\n            },\r\n            {\r\n                userId: 14,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                lastMessage: \"Lorem lorem lorem\",\r\n                time: \"04:28\"\r\n            },\r\n            {\r\n                userId: 15,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                lastMessage: \"Lorem lorem lorem\",\r\n                time: \"04:28\"\r\n            },\r\n            {\r\n                userId: 16,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                lastMessage: \"Lorem lorem lorem\",\r\n                time: \"04:28\"\r\n            },\r\n\r\n        ],\r\n        messages: [\r\n            {id: 1, content: \"Hi lorem lorem\", time: \"4:20\"},\r\n            {id: 2, content: \"How are you lorem lorem\", time: \"4:22\"},\r\n            {id: 3, content: \"I am fine, thanks lorem\", time: \"4:24\"},\r\n            {id: 4, content: \"How are you lorem\", time: \"4:25\"},\r\n            {id: 5, content: \"I am too lorem\", time: \"4:28\"},\r\n        ],\r\n        newMessage: {\r\n            id: null, time: \"\"\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsReducer = (state = stateInitDefault, action) =>{\r\n    switch (action.type) {\r\n        case NEW_MESSAGE:\r\n           return {\r\n               ...state,\r\n               DialogsPage: {\r\n                   messages: state.DialogsPage.messages,\r\n                   newMessage: {id: Math.random(), userId: Math.random(), content: action.data, time: `${new Date().getHours()}:${new Date().getMinutes()}`}\r\n               },\r\n           }\r\n        case ADD_MESSAGE:\r\n           let message = {\r\n               id: state.DialogsPage.newMessage.id,\r\n               content: state.DialogsPage.newMessage.content,\r\n               time: state.DialogsPage.newMessage.time\r\n           };\r\n           return {\r\n               ...state,\r\n               DialogsPage: {\r\n                   messages: [...state.DialogsPage.messages, message],\r\n                   newMessage: {id: null, content: \"\", time: \"\"}\r\n               },\r\n           }\r\n       default:\r\n           return state\r\n   }\r\n\r\n}\r\n\r\n/**\r\n * updateNewMessageCreator\r\n * is ActionCreator\r\n * */\r\nexport  const updateNewMessageCreator = (data) => ({\r\n    type: NEW_MESSAGE,\r\n    data: data\r\n})\r\n\r\n/**\r\n * addMessageCreator\r\n * is ActionCreator\r\n * */\r\nexport const addMessageCreator = (data) =>({\r\n    type: ADD_MESSAGE,\r\n    data: data\r\n})\r\n\r\nexport default DialogsReducer","import React from \"react\";\r\nimport MatrixNative from \"../MatrixPreloader/MatrixFunc\";\r\n\r\nlet Preloader = (props)=>{\r\n    return (\r\n        <MatrixNative classString={props.classString} speed={props.speed}/>\r\n    )\r\n}\r\nexport default Preloader","import {getUserDataAuth} from \"./AuthReducer\";\r\n\r\nconst SET_INITIAL_APP = \"SET_INITIAL_APP\"\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst AppReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case SET_INITIAL_APP:\r\n            return {...state, initialized: true}\r\n        default: return state\r\n    }\r\n}\r\n\r\n/** setInitialApp\r\n *  is ActionCreator\r\n */\r\nconst setInitialApp = () => ({\r\n    type: SET_INITIAL_APP\r\n})\r\n/** initializeApp\r\n *  is Thunk\r\n */\r\nexport const initializeApp = () => (dispatch)=>{\r\n    let promise = dispatch(getUserDataAuth())\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(setInitialApp())\r\n    })\r\n}\r\nexport default AppReducer","import * as axios from \"axios\";\r\n\r\nconst instans = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '05f410a5-264a-4969-b817-89b37cc6cffa'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (pageNum = 1, pageSize = 10)=>{\r\n        return instans.get(`users?page=${pageNum}&count=${pageSize}`)\r\n            .then(response => response.data)},\r\n    followByUser: (userId) =>{\r\n        return instans.post(`follow/${userId}`)\r\n    },\r\n    unFollowUser: (userId) =>{\r\n        return instans.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfileById: (userId) =>{\r\n        console.warn('Method is obsolete!!! Please use method from profileAPI!')\r\n        return profileAPI.getUserProfileById(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfileById: (userId) =>{\r\n        return instans.get('profile/'+userId)\r\n    },\r\n    getUserStatusById: (userId) => {\r\n        return instans.get('profile/status/'+userId)\r\n    },\r\n    updateUserStatusById:(status) =>{\r\n        return instans.put('profile/status/', {\r\n            status\r\n        })\r\n    },\r\n    setUserPhoto:(photo) =>{\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instans.put('profile/photo',formData, {\r\n            'Content-type': 'multipart/form-data'\r\n        })\r\n    },\r\n    setUserProfile:(profileInfo) =>{\r\n        return instans.put('profile/',profileInfo)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () =>{\r\n        return instans.get('auth/me')\r\n    },\r\n    logIn(email, password, rememberMe = false){\r\n        return instans.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return instans.delete('auth/login')\r\n    }\r\n}","import React, {useEffect, useRef} from \"react\";\r\nconst MatrixNative = React.memo((props)=>{\r\n        const canvas = useRef(null);\r\n        const speed = props.speed? props.speed: 35\r\n        const classWrapper = props.classString\r\n        useEffect(()=>{\r\n\r\n            // geting canvas by id c\r\n            var c = canvas.current\r\n            var ctx = c.getContext(\"2d\");\r\n\r\n            //making the canvas full screen\r\n            c.height = c.parentElement.clientHeight;\r\n            c.width = c.parentElement.clientWidth;\r\n            //chinese characters - taken from the unicode charset\r\n            var matrix = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%\";\r\n            //converting the string into an array of single characters\r\n            matrix = matrix.split(\"\");\r\n\r\n            var font_size = 10;\r\n            var columns = c.width / font_size; //number of columns for the rain\r\n            //an array of drops - one per column\r\n            var drops = [];\r\n\r\n            //x below is the x coordinate\r\n            //1 = y co-ordinate of the drop(same for every drop initially)\r\n            for (var x = 0; x < columns; x++)\r\n                drops[x] = 1;\r\n\r\n            //drawing the characters\r\n            function draw() {\r\n                //Black BG for the canvas\r\n                //translucent BG to show trail\r\n                ctx.fillStyle = \"rgba(0, 0, 0, 0.04)\";\r\n                ctx.fillRect(0, 0, c.width, c.height);\r\n\r\n                ctx.fillStyle = \"#00d8ff\"; //green text\r\n                ctx.font = font_size + \"px arial\";\r\n                //looping over drops\r\n                for (var i = 0; i < drops.length; i++) {\r\n                    //a random chinese character to print\r\n                    var text = matrix[Math.floor(Math.random() * matrix.length)];\r\n                    //x = i*font_size, y = value of drops[i]*font_size\r\n                    ctx.fillText(text, i * font_size, drops[i] * font_size);\r\n\r\n                    //sending the drop back to the top randomly after it has crossed the screen\r\n                    //adding a randomness to the reset to make the drops scattered on the Y axis\r\n                    if (drops[i] * font_size > c.height && Math.random() > 0.995)\r\n                        drops[i] = 0;\r\n                    //incrementing Y coordinate\r\n                    drops[i]++;\r\n                }\r\n            }\r\n            setInterval(draw, 80);\r\n        })\r\n        return (\r\n            <div className={classWrapper} style={{width: 100 + '%', height: 100 + '%'}}>\r\n                <canvas ref={canvas} ></canvas>\r\n            </div>\r\n        )\r\n})\r\nexport default MatrixNative","let stateInitDefault = {\r\n    NavBar:{\r\n        NavBarLinks:[\r\n            {linkId:1, link:\"/profile\", text:\"Profile\"},\r\n            {linkId:2,link:\"/messages\", text: \"Messages\"},\r\n            {linkId:3,link:\"/friends\", text: \"Friends\"},\r\n            {linkId:4,link:\"/music\", text: \"Music\"},\r\n            {linkId:5,link:\"/settings\", text: \"Settings\"}\r\n        ],\r\n        FriendsIsOnline:[\r\n            {   userId: 1,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n            },\r\n            {   userId: 2,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n            },\r\n            {   userId: 3,\r\n                userName: \"Uncle Ben\",\r\n                userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n            },\r\n        ]\r\n    }\r\n}\r\n\r\nconst SidebarReducer = (state = stateInitDefault, action) =>{\r\n    let stateCopy = {...state, NavBar: {...state.NavBar}}\r\n    if (action.type === 'SideBar'){\r\n        stateCopy.NavBar ={\r\n            NavBarLinks:[\r\n                {link:\"/profile\", text:\"Profile\"},\r\n                {link:\"/messages\", text: \"Messages\"},\r\n                {link:\"/friends\", text: \"Friends\"},\r\n                {link:\"/music\", text: \"Music\"},\r\n                {link:\"/settings\", text: \"Settings\"}\r\n            ],\r\n            FriendsIsOnline:[\r\n                {   userId: 1,\r\n                    userName: \"Uncle Ben\",\r\n                    userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                },\r\n                {   userId: 2,\r\n                    userName: \"Uncle Ben\",\r\n                    userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                },\r\n                {   userId: 3,\r\n                    userName: \"Uncle Ben\",\r\n                    userPreviewUrl: \"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\",\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    return stateCopy\r\n}\r\nexport default SidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport DialogsReducer from \"./Reducers/DialogsReducer\";\r\nimport ProfileReducer from \"./Reducers/ProfileReducer\";\r\nimport SidebarReducer from \"./Reducers/SidebarReducer\";\r\nimport FriendsReducer from \"./Reducers/FriendsReducer\";\r\nimport AuthReducer from \"./Reducers/AuthReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    DialogsReducer: DialogsReducer,\r\n    ProfileReducer: ProfileReducer,\r\n    SidebarReducer: SidebarReducer,\r\n    FriendsReducer: FriendsReducer,\r\n    AuthReducer: AuthReducer,\r\n    form: formReducer,\r\n    app: AppReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n//window.store = store\r\nexport default store;","/**\r\n * @function updateObjectInArray()\r\n * @param {Array} items\r\n * @param {Number} itemId\r\n * @param {Object} objPropName\r\n * @return {New Array}\r\n * **/\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProp) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjectProp}\r\n        }\r\n        return i\r\n    })\r\n}","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/helpers/helper-object\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\"\r\nconst IS_FETCH = \"IS-FETCH\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\"\r\n\r\nlet stateInitDefault = {\r\n    users:[\r\n        {\r\n            name: \"\",\r\n            id: 9139,\r\n            uniqueUrlName: null,\r\n            photos: {\r\n                small: null,\r\n                large: null\r\n            },\r\n            status: null,\r\n            followed: false\r\n        }\r\n    ],\r\n    pageSize: 5,\r\n    totalUsersCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst FriendsReducer = (state = stateInitDefault, action) =>{\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, \"id\", {followed:true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, \"id\", {followed:false})\r\n            }\r\n        case SET_USERS:\r\n            return{\r\n                ...state,\r\n                users: [ ...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.respTotalUsersCount\r\n            }\r\n        case IS_FETCH:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return{\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id!=action.userId)]\r\n            }\r\n        default: return{\r\n            ...state\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @function followSuccess()\r\n * is ActionCreator\r\n * @param {Number} id,\r\n * */\r\nexport const followSuccess = (id) => ({\r\n    type: FOLLOW,\r\n    id: id\r\n})\r\n\r\n\r\n/**\r\n * @function unFollowSuccess()\r\n * is ActionCreator\r\n * @param {Number} id,\r\n * */\r\nexport const unFollowSuccess = (id) =>({\r\n    type: UNFOLLOW,\r\n    id: id\r\n})\r\n\r\n/**\r\n * @function setUsers()\r\n * is ActionCreator\r\n * @param {Array} users,\r\n * */\r\nexport const setUsers = (users) =>({\r\n    type:SET_USERS,\r\n    users: users\r\n})\r\n\r\n/**\r\n * @function setCurrentPage()\r\n * is ActionCreator\r\n * @param {Number} currentPage,\r\n * */\r\nexport const setCurrentPage = (currentPage) =>({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage: currentPage\r\n})\r\n\r\n/**\r\n * @function setTotalUsersCount()\r\n * is ActionCreator\r\n * @param {Number} totalNumUsers,\r\n * */\r\nexport const setTotalUsersCount = (totalNumUsers) =>({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    respTotalUsersCount: totalNumUsers\r\n})\r\n\r\n/**\r\n * @function setFetch()\r\n * is ActionCreator\r\n * @param {boolean} isFetching,\r\n * */\r\nexport const setFetch = (isFetching)=>({\r\n    type: IS_FETCH,\r\n    isFetching: isFetching\r\n})\r\n\r\n/**\r\n * @function setToggleIsFollowing()\r\n * is ActionCreator\r\n * @param {boolean} isFetching,\r\n * @param {Number} userId\r\n * */\r\nexport const setToggleIsFollowing = (isFetching, userId) =>({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: isFetching,\r\n    userId: userId\r\n})\r\n\r\n/** getUsersThunkCrator()\r\n *  @param {Number} currentPage\r\n *  @param {Number} pageSize\r\n */\r\n\r\nexport const getUsersThunkCrator = (currentPage, pageSize) =>{\r\n  return  (dispatch) =>{\r\n        dispatch(setFetch(true))\r\n        usersAPI.getUsers(currentPage ,pageSize).then(data =>{\r\n                dispatch(setFetch(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n/** @function followUnfollowFlow()\r\n *  @param {Number} userId\r\n *  @param {Dispatch} dispatch\r\n *  @param {Method} apiMethod\r\n *  @param {ActionCreator} actionCreator\r\n */\r\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) =>{\r\n    dispatch(setToggleIsFollowing(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleIsFollowing(false, userId))\r\n}\r\n\r\n/** @function follow()\r\n *  @param {Number} userId\r\n *  Подписывается на пользователя по id\r\n */\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.followByUser.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\n/** @function unFollow()\r\n *  @param userId {Number}\r\n *  Отписывается от пользователя по id\r\n */\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.unFollowUser.bind(usersAPI), unFollowSuccess)\r\n    }\r\n}\r\n\r\nexport default FriendsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderRoot\":\"src_preloaderRoot__msmGx\"};"],"sourceRoot":""}