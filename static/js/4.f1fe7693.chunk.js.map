{"version":3,"sources":["components/Profile/Profile.module.css","App.module.css","components/Profile/UserPosts/UserPosts.module.css","components/common/FormsControls/FormsControl.module.css","components/Dialogs/MessagesWindow/MessagesWindow.module.css","components/NavBar/Navbar.module.css","components/NavBar/FriendsOnline/FriendsOnline.module.css","components/Profile/UserInfo/AvatarComponent/AvatarComponent.module.css","components/common/ModalWindow/ModalWindow.module.css","components/Profile/UserInfo/AvatarComponent/AvatarForm/AvatarForm.module.css","components/common/Dropzone/DropzoneContainer.module.css","components/common/ImageDropAndCropZone/ImgDropAndCrop.module.css","components/Profile/UserInfo/UserInfoComponents/isOwnerForm/UserInfoForm.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/UserDialogs/UserDialogs.module.css","components/Login/Login.module.css","components/Header/Header.module.css","components/NavBar/FriendsOnline/FriendsOnline.jsx","components/NavBar/Navbar.jsx","utils/validators/validator.js","components/common/FormsControls/FormsControls.js","components/Profile/UserPosts/FormPost.jsx","components/Profile/UserPosts/UserPosts.jsx","components/Profile/UserPosts/UserPostsContainer.js","components/common/ModalWindow/ModalWindow.jsx","utils/filesHelpers/WorkWithFiles.js","components/common/Dropzone/DropzoneContainer.jsx","components/common/ImageDropAndCropZone/ImgDropAndCrop.jsx","components/Profile/UserInfo/AvatarComponent/AvatarForm/AvatarForm.jsx","components/Profile/UserInfo/AvatarComponent/AvatarContainer.jsx","components/Profile/UserInfo/UserInfoComponents/UserInfoOnlyData/UserInfoOnlyData.jsx","components/Profile/UserInfo/UserInfoComponents/isOwnerForm/UserInfoForm.jsx","components/Profile/UserInfo/UserInfoComponents/UserInfoIsOwner.jsx","components/Profile/UserInfo/UserInfoContainer.jsx","hoc/withAuthRedirect.js","components/Profile/UserInfo/UserInfoForm.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/UserDialogs/UserDialogs.jsx","components/Dialogs/MessagesWindow/MessageForm.jsx","components/Dialogs/MessagesWindow/MessagesWindow.jsx","components/Dialogs/MessagesWindow/MessagesWindowContainer.js","components/Dialogs/DialogsContainer1.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Friends/UserComponents/InfoUser.jsx","components/Friends/UserComponents/InteractionUser.jsx","components/Friends/User.jsx","components/Friends/Friends.jsx","redux/Selectors/UsersSelectors.js","components/Friends/FriendsContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/common/test/TEset.js","App.js"],"names":["module","exports","FriendsOnline","props","className","c","friendsOnlain","href","headerFriendsList","itemsFriendsOnline","usersIsOnlain","map","d","key","userId","userOnline","userPrewiev","src","userPreviewUrl","alt","userName","Navbar","allNavBar","nav","navBar","NavBarLinks","l","linkId","to","link","activeClassName","active","text","friendsNavBar","FriendsIsOnline","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","createField","component","validate","name","placeholder","type","TextInto","classWrap","lableData","fieldWrapper","Field","maxLengthCreator10","Form","reduxForm","form","onSubmit","handleSubmit","buttonWrap","FormPostProfile","formData","addPost","UserPosts","posts","this","p","id","header","content","newPost","React","Component","UserPostsContainer","connect","ProfileReducer","statePost","Posts","newPostText","updateNewPostText","useStyles","makeStyles","theme","icons","width","height","fontSize","background","border","marginRight","color","iconsLast","SimpleModal","classes","Modal","open","onClose","handleClose","aria-labelledby","aria-describedby","disableBackdropClick","modalCustom","container","Terminal","TerminalToolbar","ToolbarUser","onClick","ToolbarButtons","root","TerminalBody","TerminalPrompt","bodyModal","base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","DropzoneContainer","files","onDrop","useCallback","acceptedFiles","rejectedFiles","handleDropzone","file","path","useDropzone","accept","maxSize","multiple","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","dropzoneWrapper","acceptedFileTypesArray","item","trim","ImgDropAndCrop","verifyFile","currentFile","currentFileType","currentFileSize","size","alert","includes","handleOnDrop","myFileItemReader","FileReader","addEventListener","base64Data","myResult","result","imgSrcExt","substring","indexOf","setState","imgSrc","imageFile","readAsDataURL","handleClearToDefault","event","preventDefault","imageCrop","crop","aspect","fileInputRef","current","onCropped","image","upload","base64FileString","state","filePhotoCrop","savePhoto","createRef","bind","prevProps","prevState","userAvatar","handleModalClose","editAreaWrapper","ref","onChange","handleFileSelect","maxWidth","controllsWrapper","imgPrevWrapper","imgPrev","buttonsControllsWrapper","profileInfo","photos","large","AvatarReduxForm","useState","setOpen","expBodyModal","wrapper","photoUrl","wrapperImage","isOwner","editAvatarButton","fullName","setComment","comments","commentsAvatar","commentContent","ac","avatarWrapper","matrixWrapper","shadowMatrix","MatrixFunc","classString","avatarMatrix","speed","mainImageWrap","shadowAvatar","Contacts","contactTittle","contactValue","UserInfoOnlyData","column","UserMeta","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","editMode","UserInfoForm","setProfileInfo","useEffect","cUserInfoForm","contactsWrapper","boxShadow","icon","flexBasis","buttonsWrap","saveFormProfile","appC","buttonGeneral","setEditMode","saveProfile","Accordion","defaultExpanded","AccordionSummary","expandIcon","htmlColor","aria-controls","Divider","AccordionDetails","details","initialValues","enableReinitialize","AccordionActions","disableSpacing","UserInfoContainer","UserData","mapStateToPropsForRedirect","isAuth","AuthReducer","withAuthRedirect","RedirectComponent","ProfileInfoReduxForm","ProfileContainer","params","autorizedCurrentUserId","getUserProfile","getUserStatus","setIsOwner","refreshProfile","snapshot","status","userStatus","updateStatus","updateUserStatus","dispacth","compose","withRouter","UserDialogs","dialogs","userDialog","dataUserMessage","lastMessage","messageTime","time","userDialogs","MessageReduxForm","messageInput","buttonWrapper","MessageForm","addMessageCreator","MessagesWindow","messagesElems","DialogsPage","messages","m","message","messageContent","messagesWindow","MessagesWindowContainer","DialogsReducer","dispatch","updateNewMessage","data","action","updateNewMessageCreator","addMessage","DialogsContainer","dialogsWrapper","Music","Settings","LoginReduxForm","cLogin","formServerError","logIn","Login","Password","RememberMe","Preloader","formWrapper","InfoUser","user","small","InteractionUser","followed","disabled","followingInProgress","some","unFollow","follow","User","Friends","pagesCount","Math","ceil","totalUsersCount","pageSize","pagesNum","i","push","appContent","users","u","Pagination","count","onPageChanged","variant","shape","getUsers","createSelector","FriendsReducer","filter","getPageSize","getIsFetching","isFetching","getTotalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","FriendsClass","pageNum","getUsersThunkCrator","setUsers","setCurrentPage","setTotalUsersCount","setFetch","setToggleIsFollowing","Header","login","auth","email","float","logOut","HeaderContainer","Demo","_onCropped","setWidth","setHeight","square","resize","onCrop","lazy","App","initializeApp","getUserDataAuth","initialized","appWrapper","store","getState","SidebarReducer","NavBar","exact","render","FriendsContainer","preloaderRoot","app"],"mappings":"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","file":"static/js/4.f1fe7693.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__29Ntb\",\"UserData\":\"Profile_UserData__1tP3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__349et\",\"appContent\":\"App_appContent__2-2iV\",\"appWrapperContent\":\"App_appWrapperContent__391Xo\",\"buttonGeneral\":\"App_buttonGeneral__3xS_o\",\"generalButtonWrapper\":\"App_generalButtonWrapper__13RfN\",\"preloaderRoot\":\"App_preloaderRoot__1yRoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"UserPosts_posts__3xIWr\",\"newPost\":\"UserPosts_newPost__2oxTa\",\"buttonWrap\":\"UserPosts_buttonWrap__3fIld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3Ud20\",\"error\":\"FormsControl_error__3kO51\",\"formServerError\":\"FormsControl_formServerError__2QNRC\",\"fieldWrapper\":\"FormsControl_fieldWrapper__2SpNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageTime\":\"MessagesWindow_messageTime__3A8eh\",\"messagesWindow\":\"MessagesWindow_messagesWindow__3NZuy\",\"messageInput\":\"MessagesWindow_messageInput__3xOyO\",\"posts\":\"MessagesWindow_posts__N0D53\",\"newPost\":\"MessagesWindow_newPost__zPaRh\",\"buttonWrapper\":\"MessagesWindow_buttonWrapper__2B0P1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allNavBar\":\"Navbar_allNavBar__3R3pQ\",\"nav\":\"Navbar_nav__3QzR1\",\"active\":\"Navbar_active__2BNi0\",\"friendsNavBar\":\"Navbar_friendsNavBar__xyjnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsOnlain\":\"FriendsOnline_friendsOnlain__2pE9Y\",\"headerFriendsList\":\"FriendsOnline_headerFriendsList__1Ta72\",\"itemsFriendsOnline\":\"FriendsOnline_itemsFriendsOnline__2_WP3\",\"userPrewiev\":\"FriendsOnline_userPrewiev__2bT4t\",\"userName\":\"FriendsOnline_userName__2OQ-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrapper\":\"AvatarComponent_avatarWrapper__H5nCo\",\"matrixWrapper\":\"AvatarComponent_matrixWrapper__3qdcm\",\"mainImageWrap\":\"AvatarComponent_mainImageWrap__1pFyr\",\"shadowAvatar\":\"AvatarComponent_shadowAvatar__2BiGh\",\"shadowMatrix\":\"AvatarComponent_shadowMatrix__3bnQZ\",\"avatarMatrix\":\"AvatarComponent_avatarMatrix__2QRTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalCustom\":\"ModalWindow_modalCustom__2AXhE\",\"container\":\"ModalWindow_container__1yHjj\",\"Terminal\":\"ModalWindow_Terminal__3Bc1v\",\"TerminalToolbar\":\"ModalWindow_TerminalToolbar__23FNy\",\"ToolbarButtons\":\"ModalWindow_ToolbarButtons__3CHjf\",\"iconsMaterial\":\"ModalWindow_iconsMaterial__2w3FQ\",\"ToolbarButton\":\"ModalWindow_ToolbarButton__1yHqR\",\"ToolbarButtonExit\":\"ModalWindow_ToolbarButtonExit__2DvcS\",\"ToolbarUser\":\"ModalWindow_ToolbarUser__9PqFS\",\"TerminalBody\":\"ModalWindow_TerminalBody__2pSMq\",\"TerminalText\":\"ModalWindow_TerminalText__cMR8C\",\"TerminalPrompt\":\"ModalWindow_TerminalPrompt__3Pmt5\",\"PromptUser\":\"ModalWindow_PromptUser__2guOE\",\"PromptLocation\":\"ModalWindow_PromptLocation__2FTCO\",\"PromptDollar\":\"ModalWindow_PromptDollar__1Awgk\",\"PromptCursor\":\"ModalWindow_PromptCursor__2kZ0g\",\"blink\":\"ModalWindow_blink__IckWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AvatarForm_wrapper__24KgM\",\"wrapperImage\":\"AvatarForm_wrapperImage__1niam\",\"editAvatarButton\":\"AvatarForm_editAvatarButton__5-eoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzoneWrapper\":\"DropzoneContainer_dropzoneWrapper__nButn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editAreaWrapper\":\"ImgDropAndCrop_editAreaWrapper__KaO9g\",\"controllsWrapper\":\"ImgDropAndCrop_controllsWrapper__3VtTZ\",\"buttonsControllsWrapper\":\"ImgDropAndCrop_buttonsControllsWrapper__GM88D\",\"imgPrevWrapper\":\"ImgDropAndCrop_imgPrevWrapper__1nC9_\",\"imgPrev\":\"ImgDropAndCrop_imgPrev__1NWdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserInfoForm_form__J-vjf\",\"contactsWrapper\":\"UserInfoForm_contactsWrapper__3rcKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3Fqxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDialogs\":\"UserDialogs_userDialogs__2u0ld\",\"userDialog\":\"UserDialogs_userDialog__jd4De\",\"userPrewiev\":\"UserDialogs_userPrewiev__KKkOy\",\"dataUserMessage\":\"UserDialogs_dataUserMessage__3FnVd\",\"lastMessage\":\"UserDialogs_lastMessage__2p0vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Login_Preloader__2RW6e\",\"formWrapper\":\"Login_formWrapper__157B8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2bzvW\",\"login\":\"Header_login__BUr9C\",\"active\":\"Header_active__1SG5Q\"};","import React from \"react\";\r\n\r\nimport c from \"./FriendsOnline.module.css\"\r\n\r\nlet FriendsOnline = (props) => {\r\n    return (\r\n        <div className={c.friendsOnlain}>\r\n            <a href={\"/allFriendsOnline\"}>\r\n                <div className={c.headerFriendsList}>friends@online:~</div>\r\n            </a>\r\n            <div className={c.itemsFriendsOnline}>\r\n                {props.usersIsOnlain.map(d => {\r\n                    return (\r\n                        <a key={d.userId} href={`user/profile/${d.userId}`} className={c.userOnline}>\r\n                            <div className={c.userPrewiev}>\r\n                                <img src={d.userPreviewUrl} alt=\"\"/>\r\n                            </div>\r\n                            <div className={c.userName}>\r\n                                <div>\r\n                                    {d.userName}\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsOnline","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport c from './Navbar.module.css';\r\nimport FriendsOnlain from './FriendsOnline/FriendsOnline'\r\nconst Navbar = (props) =>{\r\n    return(\r\n        <div className={c.allNavBar}>\r\n        <nav className={c.nav}>\r\n            {props.navBar.NavBarLinks.map(l =>{\r\n                return (\r\n                    <div key={l.linkId}>\r\n                        <NavLink to={l.link} activeClassName={c.active}>\r\n                            {l.text}\r\n                        </NavLink>\r\n                    </div>\r\n                )\r\n            })}\r\n        </nav>\r\n            <div className={c.friendsNavBar}>\r\n                <FriendsOnlain usersIsOnlain={props.navBar.FriendsIsOnline}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar","export const requiredField = (value) =>{\r\n    //console.log(`requiredField active`)\r\n    if(value){\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required!!'\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength){\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport c from \"./FormsControl.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {requiredField} from \"../../../utils/validators/validator\";\r\n\r\n\r\n\r\nexport const FormControl = ({input, meta, child,...props}) =>{\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <span className={c.formControl + \" \" + hasError?c.error:\"\"}>\r\n            {props.children}\r\n            {hasError?<span>{'some Error'}</span>:null}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) =>{\r\n    const {input, meta, child,...restProps} = props\r\n    return (\r\n            <FormControl {...props}><textarea {...restProps} {...input}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) =>{\r\n    const {input, meta, child,...restProps} = props\r\n    return (\r\n        <FormControl {...props}><input {...restProps} {...input} /></FormControl>\r\n    )\r\n}\r\n\r\n// export const Button = (props) =>{\r\n//     return <button onClick={props.handleSubmit}>{props.textButton}</button>\r\n// }\r\n//\r\n// /**\r\n//  * @function ButtonReduxForm()\r\n//  * @param {String} formName\r\n//  * @return ComponentButton for currentForm\r\n//  **/\r\n// //  export const ButtonReduxForm = (formName, Button) =>{\r\n// //     return reduxForm({\r\n// //         form: formName\r\n// //     })(Button)\r\n// // }\r\n\r\n/**\r\n * @function createField()\r\n * @param {RectComponent} component\r\n * @param {Array} validators\r\n * @param {String} name\r\n * @param {String} value\r\n * @param {String} placeholder\r\n * @param {String} type\r\n * @param {String} TextInto\r\n * @param {String} classWrap\r\n * @return JSX Field for Form\r\n **/\r\nexport const createField = (component, validate, name, placeholder, type, TextInto, classWrap, lableData) => {\r\n    return (\r\n        <div className={c.fieldWrapper + ' '+ classWrap}>\r\n            {lableData?<label>{lableData}</label>:null}\r\n            <Field component={component} validate={validate} name={name} placeholder={placeholder} type={type} />{TextInto}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport c from \"./UserPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {addPost} from \"../../../redux/Reducers/ProfileReducer\";\r\n\r\nconst FormPostProfile = (props) =>{\r\n    const onSubmit = (formData) =>{\r\n        addPost(formData)\r\n    }\r\n    return(\r\n        <>\r\n        <h2>My posts</h2>\r\n        <Form onSubmit={onSubmit} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nconst FormPost = (props) =>{\r\n    return(\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field name={'HeaderPost'} component={'input'}  placeholder='Write your header post...'/>\r\n                <Field name={'ContentPost'} component={Textarea}  placeholder='Write your post...' validate={[requiredField, maxLengthCreator10]}/>\r\n                <div className={c.buttonWrap}>\r\n                    <button>Send</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst Form = reduxForm({\r\n    form: \"FormPostProfile\"\r\n})(FormPost)\r\n\r\nexport default FormPostProfile","import c from \"./UserPosts.module.css\";\r\nimport React from \"react\";\r\nimport FormPostProfile from \"./FormPost\";\r\n\r\nclass UserPosts extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // setTimeout(() =>{\r\n        //     this.setState({\r\n        //         a: 12\r\n        //     })\r\n        // }, 2000)\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    //     //return nextProps != this.props && nextState != nextState\r\n    // }\r\n\r\n    render() {\r\n        let posts = this.props.UserPosts.map(p => {\r\n            return (\r\n                <div key={p.id}>\r\n                    <h3>{p.header}</h3>\r\n                    <p>{p.content}</p>\r\n                </div>\r\n            )\r\n        })\r\n        // let headPost = React.createRef();\r\n        // let textPost = React.createRef();\r\n        // let onPostChange = () =>{\r\n        //     let data = {headPost:headPost.current.value, textPost:textPost.current.value}\r\n        //     props.updateNewPostText(data)\r\n        // }\r\n\r\n        return (\r\n            <div className={c.posts}>\r\n                <div className={c.newPost}>\r\n                    <FormPostProfile {...this.props} />\r\n                </div>\r\n                {posts}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserPosts","import React from \"react\";\r\nimport {addPost, updateNewPostText} from \"../../../redux/Reducers/ProfileReducer\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (props) =>{\r\n    return{\r\n        UserPosts: props.ProfileReducer.statePost.Posts,\r\n        newPostText: props.ProfileReducer.statePost.newPostText\r\n    }\r\n}\r\n\r\nconst UserPostsContainer = connect(mapStateToProps, {updateNewPostText, addPost}) (UserPosts);\r\nexport default UserPostsContainer","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport c from './ModalWindow.module.css';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport CropSquareIcon from '@material-ui/icons/CropSquare';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root: {\r\n    //     flexGrow: 1,\r\n    //     minWidth: 300,\r\n    //     transform: 'translateZ(0)',\r\n    //     // The position fixed scoping doesn't work in IE 11.\r\n    //     // Disable this demo to preserve the others.\r\n    //     '@media all and (-ms-high-contrast: none)': {\r\n    //         display: 'none',\r\n    //     },\r\n    // },\r\n    icons: {\r\n        width: '14px',\r\n        height: '14px',\r\n        fontSize: \"10px\",\r\n        background: \"inherit\",\r\n        border: 'none',\r\n        marginRight: '4px',\r\n        color: '#fff'\r\n    },\r\n    iconsLast: {\r\n        width: '14px',\r\n        height: '14px',\r\n        fontSize: \"10px\",\r\n        background: \"inherit\",\r\n        border: 'none',\r\n        marginRight: 0,\r\n        color: '#fff'\r\n    }\r\n}));\r\nexport default function SimpleModal(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                disableBackdropClick={false}\r\n                className={c.modalCustom}\r\n            >\r\n                <div className={c.container}>\r\n                    <div className={c.Terminal}>\r\n                        <div className={c.TerminalToolbar}>\r\n                            {props.userName ? <div className={c.ToolbarUser}>\r\n                                <p>{props.userName}:~</p>\r\n                            </div> : null}\r\n                            <div onClick={props.handleClose} className={c.ToolbarButtons}>\r\n                                <MinimizeIcon classes={{\r\n                                    root: classes.icons\r\n                                }}/>\r\n                                <CropSquareIcon classes={{\r\n                                    root: classes.icons\r\n                                }}/>\r\n                                <CloseIcon classes={{\r\n                                    root: classes.iconsLast,\r\n                                }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={c.TerminalBody}>\r\n                            {/*<div className={c.TerminalText}></div>*/}\r\n                            <div className={c.TerminalPrompt}>\r\n                                {props.bodyModal}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","// A few JavaScript Functions for Images and Files\r\n// Author: Justin Mitchel\r\n// Source: https://kirr.co/ndywes\r\n\r\n/**\r\n * @function base64StringtoFile()\r\n * @param {String} base64String\r\n * @param {String} filename\r\n * @return {Object}\r\n * Convert a Base64-encoded string to a File object\r\n * **/\r\nexport const base64StringtoFile = (base64String, filename) =>{\r\n    var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n)\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n)\r\n    }\r\n    return new File([u8arr], filename, {type: mime})\r\n}\r\n\r\n/**\r\n * @function base64StringtoFile()\r\n * Download a Base64-encoded file\r\n * **/\r\nexport const downloadBase64File = (base64Data, filename) => {\r\n    var element = document.createElement('a')\r\n    element.setAttribute('href', base64Data)\r\n    element.setAttribute('download', filename)\r\n    element.style.display = 'none'\r\n    document.body.appendChild(element)\r\n    element.click()\r\n    document.body.removeChild(element)\r\n}\r\n\r\n/**\r\n * @function extractImageFileExtensionFromBase64()\r\n * @param {String} base64Data\r\n * @return String\r\n * Extract an Base64 Image's File Extension\r\n * **/\r\nexport const extractImageFileExtensionFromBase64 = (base64Data) => {\r\n    return base64Data.substring('data:image/'.length, base64Data.indexOf(';base64'))\r\n}\r\n\r\n","import React, {useCallback, useMemo} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport c from './DropzoneContainer.module.css'\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 4,\r\n    borderRadius: 7,\r\n    borderColor: '#1A427D',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: 'none',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n};\r\n\r\nconst maxSize = 500000;\r\nconst acceptedFileTypes = 'image/*'\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nconst DropzoneContainer = (props) => {\r\n\r\n    let files = [];\r\n\r\n    const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\r\n        props.handleDropzone(acceptedFiles, rejectedFiles)\r\n        files = acceptedFiles.map(file => <div key={file.path}>{file.path}</div>);\r\n    }, [])\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({accept: acceptedFileTypes, onDrop, maxSize: maxSize, multiple:false});\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    return (\r\n        <div className={c.dropzoneWrapper}>\r\n        <div {...getRootProps({style})}>\r\n            <input {...getInputProps()} />\r\n            {\r\n                isDragActive ?\r\n                    <span>Drop the files here ...</span> :\r\n                    <span>Drag 'n' drop file here,<br/> or click to select file</span>\r\n            }\r\n        </div>\r\n            {files}\r\n        </div>\r\n    )\r\n}\r\nexport default DropzoneContainer","import React, {Component} from 'react'\r\nimport {base64StringtoFile, extractImageFileExtensionFromBase64,} from '../../../utils/filesHelpers/WorkWithFiles'\r\nimport DropzoneContainer from \"../Dropzone/DropzoneContainer\";\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport ImageCrop from \"react-image-crop-component\";\r\nimport {connect} from \"react-redux\";\r\nimport {savePhoto} from \"../../../redux/Reducers/ProfileReducer\";\r\nimport c from \"./ImgDropAndCrop.module.css\"\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nconst imageMaxSize = 1000000000 // bytes\r\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\r\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {\r\n    return item.trim()\r\n})\r\n\r\nclass ImgDropAndCrop extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.fileInputRef = React.createRef()\r\n        this.onCropped = this.onCropped.bind(this)\r\n        this.state = {\r\n            imgSrc: null,\r\n            imgSrcExt: null,\r\n            crop: {\r\n                aspect: 1 / 1\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.userAvatar != this.props.userAvatar){\r\n            this.props.handleModalClose()\r\n        }\r\n    }\r\n    verifyFile = (files) => {\r\n        if (files && files.length > 0) {\r\n            const currentFile = files[0]\r\n            const currentFileType = currentFile.type\r\n            const currentFileSize = currentFile.size\r\n            if (currentFileSize > imageMaxSize) {\r\n                alert(\"This file is not allowed. \" + currentFileSize + \" bytes is too large\")\r\n                return false\r\n            }\r\n            if (!acceptedFileTypesArray.includes(currentFileType)) {\r\n                alert(\"This file is not allowed. Only images are allowed.\")\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    handleOnDrop = (files, rejectedFiles) => {\r\n        //console.log('handleOnDrop:', files, rejectedFiles)\r\n        if (rejectedFiles && rejectedFiles.length > 0) {\r\n            this.verifyFile(rejectedFiles)\r\n        }\r\n\r\n        if (files && files.length > 0) {\r\n            const isVerified = this.verifyFile(files)\r\n            if (isVerified) {\r\n                // imageBase64Data\r\n                const currentFile = files[0]\r\n                const myFileItemReader = new FileReader()\r\n                myFileItemReader.addEventListener(\"load\", () => {\r\n                    // console.log(myFileItemReader.result)\r\n                    const myResult = myFileItemReader.result\r\n                    const imgSrcExt = extractImageFileExtensionFromBase64(myResult)\r\n                    this.setState({\r\n                        imgSrc: myResult,\r\n                        imgSrcExt: imgSrcExt,\r\n                        imageFile: currentFile\r\n                    })\r\n                }, false)\r\n\r\n                myFileItemReader.readAsDataURL(currentFile)\r\n\r\n            }\r\n        }\r\n    }\r\n    handleClearToDefault = event => {\r\n        if (event) event.preventDefault()\r\n        this.setState({\r\n            imgSrc: null,\r\n            imgSrcExt: null,\r\n            imageCrop: null,\r\n            crop: {\r\n                aspect: 1 / 1\r\n            }\r\n\r\n        })\r\n        this.fileInputRef.current.value = null\r\n    }\r\n\r\n    onCropped = (imageCrop) => {\r\n        this.setState({\r\n            imageCrop: imageCrop.image\r\n        })\r\n    }\r\n    upload = () => {\r\n        const base64FileString = this.state.imageCrop\r\n        base64StringtoFile(base64FileString, 'avatar')\r\n        const filePhotoCrop = base64StringtoFile(base64FileString, 'avatar.png')\r\n        this.props.savePhoto(filePhotoCrop)\r\n    }\r\n\r\n    render() {\r\n        const {imgSrc} = this.state\r\n        return (\r\n            <div className={c.editAreaWrapper}>\r\n                <input style={{display: 'none'}} ref={this.fileInputRef} type='file' accept={acceptedFileTypes}\r\n                       multiple={false} onChange={this.handleFileSelect}/>\r\n                {imgSrc !== null ?\r\n                    <>\r\n                        <ImageCrop\r\n                            maxWidth={300}\r\n                            maxWidth={300}\r\n                            square={true}\r\n                            resize={true}\r\n                            border={\"dashed #ffffff 2px\"}\r\n                            onCrop={this.onCropped}\r\n                            src={imgSrc}\r\n                        />\r\n                        <div className={c.controllsWrapper}>\r\n                            {this.state.imageCrop ? <div className={c.imgPrevWrapper}>\r\n                                <img className={c.imgPrev} src={this.state.imageCrop} alt=\"\"/>\r\n                            </div> : null}\r\n                            <div className={c.buttonsControllsWrapper}>\r\n                                <button onClick={this.upload}><SubdirectoryArrowRightIcon/> Upload</button>\r\n                                <button onClick={this.handleClearToDefault}>Clear</button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n\r\n                    :\r\n\r\n                    <DropzoneContainer handleDropzone={this.handleOnDrop}/>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        userAvatar: state.ProfileReducer.profileInfo.photos.large\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {savePhoto})(ImgDropAndCrop)","import c from \"./AvatarForm.module.css\";\r\nimport React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setComment} from \"../../../../../redux/Reducers/ProfileReducer\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SimpleModal from \"../../../../common/ModalWindow/ModalWindow\";\r\nimport ImgDropAndCrop from \"../../../../common/ImageDropAndCropZone/ImgDropAndCrop\";\r\n\r\n\r\nconst AvatarModalBody = (props) =>{\r\n\r\n    const onSubmitComment = (formData) =>{\r\n        props.setComment(formData)\r\n    }\r\n    return (<div>\r\n        <AvatarReduxForm onSubmit={onSubmitComment} photoUrl={props.photoUrl} isOwner={props.isOwner} />\r\n    </div>)\r\n}\r\n\r\nconst AvatarForm = (props) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        icons: {\r\n            width: '14px',\r\n            height: '14px',\r\n            fontSize: \"10px\",\r\n            background: \"inherit\",\r\n            border: 'none',\r\n            color: '#fff'\r\n        },\r\n    }))\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // const editMode = () => {\r\n    //     return (\r\n    //         <div style={{color: \"white\"}} className={c.editMode}>\r\n    //             <div className={'commentPhoto'}>\r\n    //                 <Form onSubmit={props.handleSubmit}>\r\n    //                     {createField(Textarea, [], 'comment', 'Please write your comment...', 'textarea')}\r\n    //                     <button>Hack</button>\r\n    //                 </Form>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    const expBodyModal = <ImgDropAndCrop handleModalClose={handleClose} />\r\n\r\n\r\n\r\n    return (\r\n        <div className={c.wrapper}>\r\n            <img\r\n                src={props.photoUrl ? props.photoUrl : 'https://thumbs.gfycat.com/DampWanCrayfish-size_restricted.gif'}\r\n                alt=\"\"/>\r\n            <div className={c.wrapperImage}>\r\n                {props.isOwner?<div className={c.editAvatarButton}>\r\n                    <button onClick={handleOpen} className={c.editAvatarButton}>Upload New Avatar <EditOutlinedIcon classes={{\r\n                        root:classes.icons\r\n                    }}/></button>\r\n                </div>:null}\r\n            </div>\r\n            {/*{editMode()}*/}\r\n            <SimpleModal open={open} userName={props.fullName} handleClose={handleClose}\r\n                         bodyModal={expBodyModal}/>\r\n        </div>\r\n    )\r\n}\r\nconst AvatarReduxForm = reduxForm({\r\n    form: \"AvatarProfile\",\r\n})(AvatarForm)\r\nconst mapStateToProps = (state) =>({\r\n    photoUrl: state.ProfileReducer.profileInfo.photos.large,\r\n    isOwner: state.ProfileReducer.isOwner\r\n})\r\n\r\nexport default connect(mapStateToProps, {setComment})(AvatarModalBody)","import ac from \"./AvatarComponent.module.css\"\r\nimport MatrixFunc from \"../../../common/MatrixPreloader/MatrixFunc\";\r\nimport React from \"react\";\r\nimport SimpleModal from \"../../../common/ModalWindow/ModalWindow\";\r\nimport AvatarForm from \"./AvatarForm/AvatarForm\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AvatarContainer = (props) => {\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const commentsAvatar = props.comments.map((item) => {\r\n        return (<div key={item.id}>{item.commentContent}</div>)\r\n    })\r\n\r\n\r\n    const expBodyModal = <div>\r\n        <AvatarForm isOwner={props.isOwner} photoUrl={props.photoUrl}/>\r\n        <div>{commentsAvatar}</div>\r\n    </div>\r\n\r\n    return (\r\n        <>\r\n            <div className={ac.avatarWrapper}>\r\n                <div className={ac.matrixWrapper}>\r\n                    <div className={ac.shadowMatrix}></div>\r\n                    <MatrixFunc classString={ac.avatarMatrix} speed={80}/>\r\n                </div>\r\n                <div className={ac.mainImageWrap} onClick={() => {\r\n                    handleOpen()\r\n                }}>\r\n                    <div className={ac.shadowAvatar}></div>\r\n                    <img\r\n                        src={props.photoUrl ? props.photoUrl : 'https://thumbs.gfycat.com/DampWanCrayfish-size_restricted.gif'}\r\n                        alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <SimpleModal open={open} userName={props.fullName} handleClose={handleClose} isOwner={props.isOwner}\r\n                         bodyModal={expBodyModal}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photoUrl: state.ProfileReducer.profileInfo.photos.large,\r\n        fullName: state.ProfileReducer.profileInfo.fullName,\r\n        comments: state.ProfileReducer.comments,\r\n        isOwner: state.ProfileReducer.isOwner,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(AvatarContainer)","import c from \"../../../Profile.module.css\";\r\nimport React from \"react\";\r\n\r\nconst UserInfoOnlyData = (props) => {\r\n    return (<>\r\n            <div className={props.classes.column}>\r\n                <div className={c.UserMeta}>\r\n                    <div>About me: {props.profileInfo.aboutMe}</div>\r\n                    <div>Looking for a job: {props.profileInfo.lookingForAJob? 'True': 'False'}</div>\r\n                    <div>Looking for a job description: {props.profileInfo.lookingForAJobDescription}</div>\r\n                </div>\r\n            </div>\r\n            <div className={props.classes.column}>\r\n                <div>\r\n                    {Object.keys(props.profileInfo.contacts).map(key => {\r\n                        return <Contacts contactTittle={key} contactValue={props.profileInfo.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst Contacts = ({contactTittle, contactValue})=>{\r\n    return <div>{contactTittle}:{contactValue}</div>\r\n}\r\nexport default UserInfoOnlyData","import React, {useEffect, useState} from \"react\";\r\nimport c from \"../../../Profile.module.css\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\nimport cUserInfoForm from \"./UserInfoForm.module.css\"\r\nconst UserForm = (props) => {\r\n\r\n    let [profileInfo, setProfileInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        setProfileInfo(props.profileInfo)\r\n    });\r\n    return (<>\r\n            <Form onSubmit={props.handleSubmit} className={cUserInfoForm.form}>\r\n                    <div>\r\n                        <div className={c.UserMeta}>\r\n                            <div>About me:\r\n                                {props.editMode ?\r\n                                    createField(Textarea, [], 'aboutMe', `aboutMe`, 'textarea') :\r\n                                    <span> {profileInfo.aboutMe}</span>}\r\n                            </div>\r\n                            <div>Looking for a job:\r\n                                {props.editMode ?\r\n                                    createField(Input, [], 'lookingForAJob', `lookingForAJob`, 'checkbox',) :\r\n                                    <span> {profileInfo.lookingForAJob ? 'True' : 'False'}</span>}\r\n                            </div>\r\n                            <div>Looking for a job description:\r\n                                {props.editMode ?\r\n                                    createField(Textarea, [], 'lookingForAJobDescription', 'looking For A Job Description', 'textarea')\r\n                                    :\r\n                                    <span> {profileInfo.lookingForAJobDescription}</span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={cUserInfoForm.contactsWrapper}>\r\n                        <div>\r\n                            {Object.keys(props.profileInfo.contacts).map(key => {\r\n                                return <Contacts editMode={props.editMode} contactTittle={key}\r\n                                                 contactValue={props.profileInfo.contacts[key]}/>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                <div>\r\n                    {props.editMode?<button>Save</button>:null}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nconst Contacts = ({contactTittle, contactValue, editMode}) => {\r\n\r\n        if(editMode) { return createField(Input, [], `contacts.${contactTittle}`, `https://${contactTittle}`, 'input', null, null, `${contactTittle}: `)}\r\n        else{return <div>\r\n            {contactTittle}: {contactValue}\r\n            </div>}\r\n}\r\nconst UserInfoForm = reduxForm({\r\n    form: 'userInfoForm'\r\n})(UserForm)\r\nexport default UserInfoForm","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport appC from \"../../../../App.module.css\"\r\nimport UserInfoOnlyData from \"./UserInfoOnlyData/UserInfoOnlyData\";\r\nimport UserInfoForm from \"./isOwnerForm/UserInfoForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {saveProfile, setEditMode} from \"../../../../redux/Reducers/ProfileReducer\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#2E2E2E',\r\n        color: '#00D8FF',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 0px 0px rgba(0, 171, 184, 1), 0px 1px 0px 0px rgba(55,0,0,0.12)'\r\n    },\r\n    icon: {\r\n        backgroundColor:'rgba(0, 171, 184, 1)'\r\n    },\r\n    column: {\r\n        flexBasis: '50%',\r\n    },\r\n\r\n    buttonsWrap:{\r\n            backgroundColor: '#000000',\r\n            borderColor: '#1A427D',\r\n            color: '#b3b2ad',\r\n    }\r\n}));\r\n\r\nconst UserInfoIsOwner =(props) => {\r\n    const classes = useStyles();\r\n    const editMode = (editMode) =>{\r\n        props.setEditMode(editMode)\r\n    }\r\n    const onSubmit = (formData) =>{\r\n        props.saveProfile(formData)\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion defaultExpanded classes={classes}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon htmlColor={'#00D8FF'} />}\r\n                    aria-controls=\"panel1c-content\"\r\n                    id=\"panel1c-header\"\r\n                    classes={classes.root}\r\n                >\r\n                    <div className={classes.column}>\r\n                        <h2>fullName: {props.profileInfo.fullName}</h2>\r\n                    </div>\r\n                </AccordionSummary>\r\n                <Divider classes={ {root:classes.icon}} />\r\n                <AccordionDetails className={classes.details}>\r\n                    {props.isOwner?\r\n                        <UserInfoForm classes={classes} initialValues={props.profileInfo}\r\n                                      enableReinitialize={true}\r\n                                      profileInfo={props.profileInfo}\r\n                                      editMode={props.editMode}\r\n                                      onSubmit={onSubmit}\r\n                        />\r\n                        :<UserInfoOnlyData classes={classes} profileInfo={props.profileInfo} />}\r\n                </AccordionDetails>\r\n                {props.isOwner?<>\r\n                <Divider classes={ {root:classes.icon}} />\r\n                <AccordionActions disableSpacing={true} >\r\n                    {props.editMode?\r\n                        <button onClick={()=>editMode(false)} className={appC.buttonGeneral}>Cancel</button>\r\n                         :\r\n                        <button onClick={()=>editMode(true)} className={appC.buttonGeneral}>Edit</button>}\r\n                </AccordionActions></>: null}\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\nconst ButtonForForm = (props) =>{\r\n    return(\r\n        <button onClick={props.saveFormProfile} className={appC.buttonGeneral}>{props.text}</button>\r\n    )\r\n}\r\nconst ButtonWithReduxForm = reduxForm({\r\n    form: \"userInfoForm\"\r\n})(ButtonForForm)\r\nconst mapStateToProps = (state) =>({\r\n    isOwner: state.ProfileReducer.isOwner,\r\n    editMode: state.ProfileReducer.editMode\r\n})\r\nexport default connect(mapStateToProps,{setEditMode,saveProfile})(UserInfoIsOwner)","import c from \"../Profile.module.css\";\r\nimport React from \"react\";\r\nimport AvatarContainer from \"./AvatarComponent/AvatarContainer\";\r\nimport UserInfoIsOwner from \"./UserInfoComponents/UserInfoIsOwner\";\r\nconst UserInfoContainer = (props)=> {\r\n    return(\r\n        <>\r\n            <AvatarContainer />\r\n            <div className={c.UserData}>\r\n                {/*<ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status}/>*/}\r\n                     <UserInfoIsOwner isOwner={props.isOwner} profileInfo={props.profileInfo} />\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n// const Contacts = ({contactTittle, contactValue})=>{\r\n//     return <div>{contactTittle}:{contactValue}</div>\r\n// }\r\nexport default UserInfoContainer","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth: state.AuthReducer.isAuth\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConectedAuthRedirectComponent\r\n}\r\nexport default withAuthRedirect","import c from \"../Profile.module.css\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport {requiredField} from \"../../../utils/validators/validator\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {savePhoto, saveProfile} from \"../../../redux/Reducers/ProfileReducer\";\r\n\r\nconst UserInfoForm = (props) => {\r\n    const mainPhotoSelected = (f) => {\r\n        props.savePhoto(f.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*<img*/}\r\n            {/*    src={props.profileInfo.photos.large ? props.profileInfo.photos.large : 'https://thumbs.gfycat.com/DampWanCrayfish-size_restricted.gif'}*/}\r\n            {/*    alt=\"\"/>*/}\r\n            <div className={c.UserData}>\r\n                {/*<div className={c.Avatar}>*/}\r\n                {/*    <img*/}\r\n                {/*        src={props.profileInfo.photos.small ? props.profileInfo.photos.small : 'https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg'}*/}\r\n                {/*        alt=\"\"/>*/}\r\n                {/*    {props.isOwner &&*/}\r\n                {/*    <label>*/}\r\n                {/*        Upload<input style={{visibility: 'hidden'}} type={\"file\"} onChange={mainPhotoSelected}/>*/}\r\n                {/*    </label>}*/}\r\n                {/*    /!*<div>*!/*/}\r\n                {/*    /!*    looking for a job: {props.profileInfo.lookingForAJob? \"yes\" : \"no\"}*!/*/}\r\n                {/*    /!*</div>*!/*/}\r\n                {/*</div>*/}\r\n                <Form onSubmit={props.handleSubmit}>\r\n                    <div>\r\n                        {Object.keys(props.profileInfo.contacts).map(key => {\r\n                            return <Contacts contactTittle={key} contactValue={props.profileInfo.contacts[key]}/>\r\n                        })}\r\n                    </div>\r\n                    <div className={c.UserMeta}>\r\n                        {createField(Input, [requiredField], 'fullName', 'Your full name...', 'text')}\r\n                        {createField(Input, [requiredField], 'aboutMe', 'About you...', 'textarea')}\r\n                        {createField(Input, [], 'lookingForAJob', null, 'checkbox', 'Looking for a job?')}\r\n                        {createField(Input, [requiredField], 'lookingForAJobDescription', 'Your are working skills...', 'textarea')}\r\n                        <div>\r\n                            <button>Hack</button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst Contacts = ({contactTittle, contactValue}) => {\r\n    return <div>{contactTittle}:{contactValue}</div>\r\n}\r\nconst ProfileInfoReduxForm = reduxForm({\r\n    form: \"ProfileInfoForm\"\r\n})(UserInfoForm)\r\nconst mapStateToProps = (state) => ({state: state.ProfileReducer })\r\nexport default connect(mapStateToProps, {saveProfile, savePhoto})(ProfileInfoReduxForm)","import React from \"react\";\r\nimport c from './Profile.module.css'\r\nimport UserPostsContainer from \"./UserPosts/UserPostsContainer\";\r\nimport UserInfoContainer from \"./UserInfo/UserInfoContainer\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfile, setIsOwner,\r\n    updateUserStatus\r\n} from \"../../redux/Reducers/ProfileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileInfoReduxForm} from \"./UserInfo/UserInfoForm\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = this.props.autorizedCurrentUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n        const isOwner = userId == this.props.autorizedCurrentUserId\r\n        this.props.setIsOwner(isOwner)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.userId != this.props.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={c.content}>\r\n                <UserInfoContainer\r\n                    isOwner={this.props.isOwner}\r\n                    profileInfo={this.props.profileInfo}\r\n                    contacts={''}\r\n                    status={this.props.userStatus}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n                <UserPostsContainer dispacth={this.props} UserPosts={this.props.statePost}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n            profileInfo: state.ProfileReducer.profileInfo,\r\n            autorizedCurrentUserId: state.AuthReducer.id,\r\n            userStatus: state.ProfileReducer.userStatus,\r\n            statePost:  state.ProfileReducer.statePost,\r\n            isOwner: state.ProfileReducer.isOwner\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile,getUserStatus,updateUserStatus, savePhoto, saveProfile, setIsOwner}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport c from \"./UserDialogs.module.css\";\r\n\r\nconst UserDialogs = (props) => {\r\n    let dialogs = props.UserDialogs.map(d => {\r\n        return (\r\n            <div key={d.userId} className={c.userDialog}>\r\n                <div className={c.userPrewiev}>\r\n                    <img src={d.userPreviewUrl} alt=\"\"/>\r\n                </div>\r\n                <div className={c.dataUserMessage}>\r\n                    <div className={c.userName}>\r\n                        {d.userName}\r\n                    </div>\r\n                    <div className={c.lastMessage}>\r\n                        {d.lastMessage}\r\n                    </div>\r\n                    <div className={c.messageTime}>\r\n                        {d.time}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={c.userDialogs}>\r\n            {dialogs}\r\n        </div>\r\n    )\r\n}\r\nexport default UserDialogs","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport c from \"./MessagesWindow.module.css\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validator\";\r\nimport {addMessageCreator} from \"../../../redux/Reducers/DialogsReducer\";\r\n\r\nconst MessageForm = (props) =>{\r\n\r\n    const onSubmit = (formData) =>{\r\n        addMessageCreator(formData)\r\n    }\r\n\r\n    return(\r\n        <MessageReduxForm onSubmit={onSubmit}/>\r\n    )\r\n}\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\nconst Form = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={c.messageInput}>\r\n            <Field name={'MessageContent'} component={Textarea} validate={[requiredField, maxLengthCreator10]} placeholder=\"Write your message..\"/>\r\n            <div className={c.buttonWrapper}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"MessageForm\"\r\n})(Form)\r\nexport default MessageForm","import React from \"react\";\r\nimport c from \"./MessagesWindow.module.css\"\r\nimport MessageReduxForm from \"./MessageForm\";\r\nconst MessagesWindow = (props) =>{\r\n    // let updateNewMessage = () =>{\r\n    //     let data = messageContent.current.value\r\n    //     props.updateNewMessage(data)\r\n    // }\r\n    // let addMessage = () => {\r\n    //     props.addMessage()\r\n    // }\r\n    //const messageContent = React.createRef()\r\n    let messagesElems = props.DialogsPage.messages.map(m => {\r\n        return (\r\n            <div key={m.id} className={c.message}>\r\n                <div className={c.messageContent}>\r\n                    {m.content}\r\n                </div>\r\n                <div className={c.messageTime}>\r\n                    {m.time}\r\n                </div>\r\n            </div>\r\n        )\r\n    } )\r\n\r\n    return(\r\n        <div className={c.messagesWindow}>\r\n            <div className={''}>\r\n                {messagesElems}\r\n            </div>\r\n            <MessageReduxForm />\r\n        </div>\r\n    )\r\n}\r\nexport default MessagesWindow","import React from 'react';\r\nimport {addMessageCreator, updateNewMessageCreator} from \"../../../redux/Reducers/DialogsReducer\";\r\nimport MessagesWindow from \"./MessagesWindow\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        DialogsPage: state.DialogsReducer.DialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        updateNewMessage: (data) =>{\r\n            let action = updateNewMessageCreator(data)\r\n            dispatch(action);\r\n        },\r\n        addMessage: () =>{\r\n            dispatch(addMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MessagesWindowContainer = connect(mapStateToProps, mapDispatchToProps) (MessagesWindow);\r\nexport default MessagesWindowContainer\r\n","import React from \"react\";\r\nimport c from \"./Dialogs.module.css\"\r\nimport UserDialogs from \"./UserDialogs/UserDialogs\";\r\nimport MessagesWindowContainer from \"./MessagesWindow/MessagesWindowContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className={c.dialogsWrapper}>\r\n                <UserDialogs UserDialogs={this.props.DialogsPage.dialogs} />\r\n                <MessagesWindowContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    DialogsPage: state.DialogsReducer.DialogsPage,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {}),\r\n    withAuthRedirect\r\n) (DialogsContainer)","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {logIn} from \"../../redux/Reducers/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport c from \"../common/FormsControls/FormsControl.module.css\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport cLogin from './Login.module.css'\r\nimport SimpleModal from \"../common/ModalWindow/ModalWindow\";\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.logIn(formData.Login, formData.Password, formData.RememberMe)\r\n    }\r\n\r\n    const expBodyModal = () =>{\r\n        return(\r\n            <div className={cLogin.formWrapper}>\r\n                <h1>login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Preloader classString={cLogin.Preloader}/>\r\n            <SimpleModal open={true} userName={'login@root~'}\r\n                         bodyModal={expBodyModal()}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className={cLogin.form} onSubmit={props.handleSubmit}>\r\n            {createField(Input, [requiredField], 'Login', 'Login', 'email','','')}\r\n            {createField(Input, [requiredField], 'Password', 'Password', 'password', '', '')}\r\n            {createField(Input, [], 'RememberMe', 'Login', 'checkbox', ' Remember me?', '', )}\r\n            {props.error && <div className={c.formServerError}>\r\n                {props.error}\r\n            </div>}\r\n            <div className={cLogin.buttonWrapper}>\r\n                <button >Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"Login\"\r\n})(LoginForm)\r\nconst mapStateToProps = (state) => ({state: state.AuthReducer, isAuth: state.AuthReducer.isAuth})\r\nexport default connect(mapStateToProps, {logIn})(Login)","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst InfoUser = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <NavLink to={`/profile/${props.user.id}`}>\r\n                    {props.user.photos.small ? <img src={props.user.photos.small}/> :\r\n                        <img style={{width: 100 + 'px', height: 100 + 'px'}}\r\n                             src=\"https://i.pinimg.com/564x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"/>}\r\n                </NavLink>\r\n            </div>\r\n            <div>{props.user.name}</div>\r\n          </>\r\n    )\r\n}\r\nexport default InfoUser","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst InteractionUser = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {props.user.followed ? <button type={'button'}\r\n                                           disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                           onClick={() => {\r\n                                               props.unFollow(props.user.id)\r\n                                           }}\r\n                >Unfollow</button>\r\n                : <button type={'button'}\r\n                          disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                          onClick={() => {\r\n                              props.follow(props.user.id)\r\n                          }}\r\n                >follow</button>}\r\n        </>\r\n    )\r\n}\r\nexport default InteractionUser","import React from \"react\";\r\nimport InfoUser from \"./UserComponents/InfoUser\";\r\nimport InteractionUser from \"./UserComponents/InteractionUser\";\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div className={'userItem'}>\r\n            <InfoUser user={props.user} />\r\n            <InteractionUser user={props.user} followingInProgress={props.followingInProgress} follow={props.follow} unFollow={props.unFollow}/>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport c from \"../../App.module.css\"\r\nimport User from \"./User\";\r\nlet Friends = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pagesNum = [];\r\n    for (let i = 1; i < pagesCount; i++) {\r\n        pagesNum.push(i)\r\n    }\r\n    return (\r\n        <div className={c.appContent}>\r\n\r\n            {props.users.map((u) => {\r\n              return  <User followingInProgress={props.followingInProgress} follow={props.follow} unFollow={props.unFollow} key={u.id} user={u}/>\r\n            })}\r\n            <div style={{backgroundColor: \"#00D8FF\"}} >\r\n                <Pagination count={pagesCount} onChange={props.onPageChanged} variant=\"outlined\" shape=\"rounded\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) =>{\r\n    return state.FriendsReducer.users\r\n}\r\nexport const getUsers = createSelector([getUsersSelector], (users) =>{\r\n    return users.filter(u=>true)\r\n})\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.FriendsReducer.pageSize\r\n}\r\nexport const getIsFetching = (state) =>{\r\n    return state.FriendsReducer.isFetching\r\n}\r\nexport const getTotalUsersCount =(state) =>{\r\n    return state.FriendsReducer.totalUsersCount\r\n}\r\n/**\r\n* @function getCurrentPage() Return number current page\r\n* @param {Object} state\r\n* @return {Number}\r\n*/\r\nexport const getCurrentPage =(state) =>{\r\n    return state.FriendsReducer.currentPage\r\n}\r\nexport const getFollowingInProgress =(state) =>{\r\n    return state.FriendsReducer.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    unFollow,\r\n    setTotalUsersCount,\r\n    setFetch,\r\n    setToggleIsFollowing, getUsersThunkCrator,\r\n} from \"../../redux/Reducers/FriendsReducer\";\r\nimport Friends from \"./Friends\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/Selectors/UsersSelectors\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nclass FriendsClass extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCrator(this.props.currentPage,this.props.pageSize);\r\n    }\r\n    onPageChanged = ({},pageNum)=>{\r\n        this.props.getUsersThunkCrator(pageNum,this.props.pageSize)\r\n    }\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.props.isFetching ?<Preloader /> : null}\r\n                <Friends\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unFollow={this.props.unFollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n            </>\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        users: getUsers(state),\r\n        isFetching: getIsFetching(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unFollow,setUsers,setCurrentPage,setTotalUsersCount,setFetch, setToggleIsFollowing, getUsersThunkCrator}),\r\n    withAuthRedirect,\r\n)(FriendsClass)","import React from \"react\";\r\nimport c from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) =>{\r\n    return(\r\n        <header className={c.header}>\r\n            <img src=\"https://www.pngfind.com/pngs/m/439-4395607_model-image-t-shirt-mr-robot-fsociety-hd.png\" alt=\"\"/>\r\n            <div className={c.login}>\r\n                {props.auth.isAuth?<div>\r\n                    <NavLink to={'/profile/' + props.auth.id}>{props.auth.email}</NavLink>\r\n                    <a style={{float: \"right\"}} onClick={()=>props.logOut()}>log Out</a></div>:<NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logOut} from \"../../redux/Reducers/AuthReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Header logOut={this.props.logOut} auth={this.props.AuthReducer}/>\r\n        )\r\n\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return state\r\n}\r\nexport default connect(mapStateToProps, {logOut})(HeaderContainer)","import React, {Component} from 'react'\r\nimport {render} from 'react-dom'\r\nimport ImageCrop from 'react-image-crop-component'\r\nimport 'react-image-crop-component/style.css'\r\n\r\nclass Demo extends Component{\r\n    constructor(){\r\n        super()\r\n        this.onCropped = this._onCropped.bind(this)\r\n    }\r\n    render(){\r\n        return (<div style={{width: \"300px\", height: \"300px\"}}>\r\n            <ImageCrop src=\"demo.jpg\"\r\n                       setWidth={300}\r\n                       setHeight={300}\r\n                       square={false}\r\n                       resize={true}\r\n                       border={\"dashed #ffffff 2px\"}\r\n                       onCrop={this.onCropped}/>\r\n        </div>)\r\n    }\r\n}\r\n    // _onCropped: function (e) {\r\n    //     let image = e.image\r\n    //     let image_data = e.data\r\n    // }\r\nexport default Demo","import React from 'react';\nimport c from './App.module.css';\nimport Navbar from \"./components/NavBar/Navbar\";\nimport ProfileComponent from \"./components/Profile/ProfileContainer\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer1\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport Login from \"./components/Login/Login\"\nimport {Redirect, Route} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/Reducers/AppReducer\";\nimport Test from \"./components/common/test/TEset\";\nimport AuthReducer, {getUserDataAuth} from \"./redux/Reducers/AuthReducer\";\n\nconst Preloader = React.lazy(() => import('./components/common/Preloader/Preloader'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n        this.props.getUserDataAuth()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader classString={c.preloaderRoot}/>\n        }\n        return (\n            <>\n                {/*<Route path='/test' render={() => <Preloader/>}/>*/}\n                {this.props.isAuth ?\n                <div className={c.appWrapper}>\n                    <HeaderContainer/>\n                    <Navbar navBar={store.getState().SidebarReducer.NavBar}/>\n                    <div className={'appWrapperContent'}>\n                        <Route exact path=\"/\">\n                            <Redirect to=\"/profile\" />\n                        </Route>\n                        <Route path='/messages' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileComponent/>}/>\n                        <Route path='/friends' render={() => <FriendsContainer/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/test' render={() => <Test/>}/>\n                    </div>\n                </div> : <Route path='/' render={() => <Login/>}/>}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    isAuth: state.AuthReducer.isAuth\n})\n\nexport default connect(mapStateToProps, {initializeApp, getUserDataAuth})(App);\n"],"sourceRoot":""}